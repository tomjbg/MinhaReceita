// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minhareceita.data.Contexto;

namespace minhareceita.data.Migrations.App
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("minhareceita.domain.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(130)");

                    b.Property<Guid>("ReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId")
                        .IsUnique();

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("minhareceita.domain.Models.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("minhareceita.domain.Models.ModoPreparoEtapa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.ToTable("ModoPreparoEtapa");
                });

            modelBuilder.Entity("minhareceita.domain.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("minhareceita.domain.Models.Receita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int");

                    b.Property<int>("Curtidas")
                        .HasColumnType("int");

                    b.Property<string>("Imagens")
                        .HasColumnType("text");

                    b.Property<string>("Ingredientes")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int>("QtdFavoritados")
                        .HasColumnType("int");

                    b.Property<int>("QtdPorcoes")
                        .HasColumnType("int");

                    b.Property<int>("TempoPreparoMinutos")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("minhareceita.domain.Models.Categoria", b =>
                {
                    b.HasOne("minhareceita.domain.Models.Receita", "Receita")
                        .WithOne("Categoria")
                        .HasForeignKey("minhareceita.domain.Models.Categoria", "ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minhareceita.domain.Models.Comentario", b =>
                {
                    b.HasOne("minhareceita.domain.Models.Perfil", "Perfil")
                        .WithMany("Comentarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("minhareceita.domain.Models.Receita", "Receita")
                        .WithMany("Comentarios")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("minhareceita.domain.Models.ModoPreparoEtapa", b =>
                {
                    b.HasOne("minhareceita.domain.Models.Receita", "Receita")
                        .WithMany("ModoPreparoEtapas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minhareceita.domain.Models.Receita", b =>
                {
                    b.HasOne("minhareceita.domain.Models.Perfil", "Perfil")
                        .WithMany("Receitas")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
